<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: game.proto

namespace Game;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 *发言
 * </pre>
 *
 * Protobuf type <code>game.speak</code>
 */
class speak extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     *玩家唯一ID
     * </pre>
     *
     * <code>string userId = 1;</code>
     */
    private $userId = '';
    /**
     * <pre>
     *说话内容
     * </pre>
     *
     * <code>string msg = 2;</code>
     */
    private $msg = '';
    /**
     * <pre>
     *类型 0：语音  1：文本
     * </pre>
     *
     * <code>uint32 type = 3;</code>
     */
    private $type = 0;

    public function __construct() {
        \GPBMetadata\Game::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     *玩家唯一ID
     * </pre>
     *
     * <code>string userId = 1;</code>
     */
    public function getUserId()
    {
        return $this->userId;
    }

    /**
     * <pre>
     *玩家唯一ID
     * </pre>
     *
     * <code>string userId = 1;</code>
     */
    public function setUserId($var)
    {
        GPBUtil::checkString($var, True);
        $this->userId = $var;

        return $this;
    }

    /**
     * <pre>
     *说话内容
     * </pre>
     *
     * <code>string msg = 2;</code>
     */
    public function getMsg()
    {
        return $this->msg;
    }

    /**
     * <pre>
     *说话内容
     * </pre>
     *
     * <code>string msg = 2;</code>
     */
    public function setMsg($var)
    {
        GPBUtil::checkString($var, True);
        $this->msg = $var;

        return $this;
    }

    /**
     * <pre>
     *类型 0：语音  1：文本
     * </pre>
     *
     * <code>uint32 type = 3;</code>
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * <pre>
     *类型 0：语音  1：文本
     * </pre>
     *
     * <code>uint32 type = 3;</code>
     */
    public function setType($var)
    {
        GPBUtil::checkUint32($var);
        $this->type = $var;

        return $this;
    }

}

