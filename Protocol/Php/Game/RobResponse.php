<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: game.proto

namespace Game;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>game.RobResponse</code>
 */
class RobResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * 叫地主，欢乐斗地主和叫地主需要，1为叫地主，2为不叫
     * </pre>
     *
     * <code>uint32 flag = 1;</code>
     */
    private $flag = 0;
    /**
     * <pre>
     * 叫分，叫分需要
     * </pre>
     *
     * <code>uint32 score = 2;</code>
     */
    private $score = 0;
    /**
     * <pre>
     * 玩家UUID
     * </pre>
     *
     * <code>string player = 3;</code>
     */
    private $player = '';
    /**
     * <pre>
     * 下一个叫玩家UUID，如果为空则表示结束
     * </pre>
     *
     * <code>string next_rob_player = 4;</code>
     */
    private $next_rob_player = '';
    /**
     * <pre>
     * 最后成为地主玩家UUID，如果为空且下一个叫地主的玩家也为空，则表示重新发牌，都没叫
     * </pre>
     *
     * <code>string laird_player = 5;</code>
     */
    private $laird_player = '';
    /**
     * <pre>
     * 上一个叫玩家UUID
     * </pre>
     *
     * <code>string prev_rob_player = 6;</code>
     */
    private $prev_rob_player = '';

    public function __construct() {
        \GPBMetadata\Game::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * 叫地主，欢乐斗地主和叫地主需要，1为叫地主，2为不叫
     * </pre>
     *
     * <code>uint32 flag = 1;</code>
     */
    public function getFlag()
    {
        return $this->flag;
    }

    /**
     * <pre>
     * 叫地主，欢乐斗地主和叫地主需要，1为叫地主，2为不叫
     * </pre>
     *
     * <code>uint32 flag = 1;</code>
     */
    public function setFlag($var)
    {
        GPBUtil::checkUint32($var);
        $this->flag = $var;
    }

    /**
     * <pre>
     * 叫分，叫分需要
     * </pre>
     *
     * <code>uint32 score = 2;</code>
     */
    public function getScore()
    {
        return $this->score;
    }

    /**
     * <pre>
     * 叫分，叫分需要
     * </pre>
     *
     * <code>uint32 score = 2;</code>
     */
    public function setScore($var)
    {
        GPBUtil::checkUint32($var);
        $this->score = $var;
    }

    /**
     * <pre>
     * 玩家UUID
     * </pre>
     *
     * <code>string player = 3;</code>
     */
    public function getPlayer()
    {
        return $this->player;
    }

    /**
     * <pre>
     * 玩家UUID
     * </pre>
     *
     * <code>string player = 3;</code>
     */
    public function setPlayer($var)
    {
        GPBUtil::checkString($var, True);
        $this->player = $var;
    }

    /**
     * <pre>
     * 下一个叫玩家UUID，如果为空则表示结束
     * </pre>
     *
     * <code>string next_rob_player = 4;</code>
     */
    public function getNextRobPlayer()
    {
        return $this->next_rob_player;
    }

    /**
     * <pre>
     * 下一个叫玩家UUID，如果为空则表示结束
     * </pre>
     *
     * <code>string next_rob_player = 4;</code>
     */
    public function setNextRobPlayer($var)
    {
        GPBUtil::checkString($var, True);
        $this->next_rob_player = $var;
    }

    /**
     * <pre>
     * 最后成为地主玩家UUID，如果为空且下一个叫地主的玩家也为空，则表示重新发牌，都没叫
     * </pre>
     *
     * <code>string laird_player = 5;</code>
     */
    public function getLairdPlayer()
    {
        return $this->laird_player;
    }

    /**
     * <pre>
     * 最后成为地主玩家UUID，如果为空且下一个叫地主的玩家也为空，则表示重新发牌，都没叫
     * </pre>
     *
     * <code>string laird_player = 5;</code>
     */
    public function setLairdPlayer($var)
    {
        GPBUtil::checkString($var, True);
        $this->laird_player = $var;
    }

    /**
     * <pre>
     * 上一个叫玩家UUID
     * </pre>
     *
     * <code>string prev_rob_player = 6;</code>
     */
    public function getPrevRobPlayer()
    {
        return $this->prev_rob_player;
    }

    /**
     * <pre>
     * 上一个叫玩家UUID
     * </pre>
     *
     * <code>string prev_rob_player = 6;</code>
     */
    public function setPrevRobPlayer($var)
    {
        GPBUtil::checkString($var, True);
        $this->prev_rob_player = $var;
    }

}

