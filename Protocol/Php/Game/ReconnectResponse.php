<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: game.proto

namespace Game;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 *RECONNECT = 0x1014  # 玩家断线重连
 * </pre>
 *
 * Protobuf type <code>game.ReconnectResponse</code>
 */
class ReconnectResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * 6位房间号
     * </pre>
     *
     * <code>uint32 room_id = 1;</code>
     */
    private $room_id = 0;
    /**
     * <pre>
     * json 创建房间参数，由具体游戏各自解析字段
     * </pre>
     *
     * <code>string kwargs = 2;</code>
     */
    private $kwargs = '';
    /**
     * <pre>
     * 房主UUID
     * </pre>
     *
     * <code>string owner = 3;</code>
     */
    private $owner = '';
    /**
     * <pre>
     * 房间状态（）
     * </pre>
     *
     * <code>uint32 room_status = 4;</code>
     */
    private $room_status = 0;
    /**
     * <pre>
     * 当前局数
     * </pre>
     *
     * <code>uint32 current_round = 5;</code>
     */
    private $current_round = 0;
    /**
     * <pre>
     * 地主uuid
     * </pre>
     *
     * <code>string laird_player = 6;</code>
     */
    private $laird_player = '';
    /**
     * <pre>
     * 当前出牌玩家的uuid
     * </pre>
     *
     * <code>string discard_player = 7;</code>
     */
    private $discard_player = '';
    /**
     * <pre>
     * 当前抢地主玩家的uuid
     * </pre>
     *
     * <code>string rob_player = 8;</code>
     */
    private $rob_player = '';
    /**
     * <pre>
     * 底分
     * </pre>
     *
     * <code>int32 base_score = 9;</code>
     */
    private $base_score = 0;
    /**
     * <pre>
     * 总分
     * </pre>
     *
     * <code>int32 score = 10;</code>
     */
    private $score = 0;
    /**
     * <pre>
     * 翻倍数
     * </pre>
     *
     * <code>int32 multiple = 11;</code>
     */
    private $multiple = 0;
    /**
     * <pre>
     * 三张底牌
     * </pre>
     *
     * <code>repeated .game.Card three_cards = 12;</code>
     */
    private $three_cards;
    /**
     * <pre>
     * 本局中炸弹次数
     * </pre>
     *
     * <code>int32 boom_cnt = 13;</code>
     */
    private $boom_cnt = 0;
    /**
     * <code>repeated .game.ReconnectResponse.Player player = 14;</code>
     */
    private $player;
    /**
     * <code>uint32 code = 15;</code>
     */
    private $code = 0;
    /**
     * <pre>
     * 上个出牌玩家的UUID
     * </pre>
     *
     * <code>string prev_discard_player = 16;</code>
     */
    private $prev_discard_player = '';
    /**
     * <pre>
     * 上个玩家出的牌
     * </pre>
     *
     * <code>repeated .game.Card prev_discard_cards = 17;</code>
     */
    private $prev_discard_cards;
    /**
     * <pre>
     *亮主A的玩家
     * </pre>
     *
     * <code>string show_a_player = 19;</code>
     */
    private $show_a_player = '';
    /**
     * <pre>
     *亮次A的玩家
     * </pre>
     *
     * <code>string show_a_ex_player = 20;</code>
     */
    private $show_a_ex_player = '';
    /**
     * <pre>
     *亮的A牌
     * </pre>
     *
     * <code>int32 show_a_card = 21;</code>
     */
    private $show_a_card = 0;
    /**
     * <pre>
     *大A玩家是否全部出现
     * </pre>
     *
     * <code>int32 is_all_show_a = 22;</code>
     */
    private $is_all_show_a = 0;
    /**
     * <pre>
     *0 亮一个A  1 亮双A  2 反A
     * </pre>
     *
     * <code>int32 tableType = 23;</code>
     */
    private $tableType = 0;
    /**
     * <pre>
     *0 非独8  1 独8
     * </pre>
     *
     * <code>int32 singleFlag = 24;</code>
     */
    private $singleFlag = 0;
    /**
     * <pre>
     * 另一个A所属于的玩家
     * </pre>
     *
     * <code>string otherAPlayer = 25;</code>
     */
    private $otherAPlayer = '';

    public function __construct() {
        \GPBMetadata\Game::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * 6位房间号
     * </pre>
     *
     * <code>uint32 room_id = 1;</code>
     */
    public function getRoomId()
    {
        return $this->room_id;
    }

    /**
     * <pre>
     * 6位房间号
     * </pre>
     *
     * <code>uint32 room_id = 1;</code>
     */
    public function setRoomId($var)
    {
        GPBUtil::checkUint32($var);
        $this->room_id = $var;
    }

    /**
     * <pre>
     * json 创建房间参数，由具体游戏各自解析字段
     * </pre>
     *
     * <code>string kwargs = 2;</code>
     */
    public function getKwargs()
    {
        return $this->kwargs;
    }

    /**
     * <pre>
     * json 创建房间参数，由具体游戏各自解析字段
     * </pre>
     *
     * <code>string kwargs = 2;</code>
     */
    public function setKwargs($var)
    {
        GPBUtil::checkString($var, True);
        $this->kwargs = $var;
    }

    /**
     * <pre>
     * 房主UUID
     * </pre>
     *
     * <code>string owner = 3;</code>
     */
    public function getOwner()
    {
        return $this->owner;
    }

    /**
     * <pre>
     * 房主UUID
     * </pre>
     *
     * <code>string owner = 3;</code>
     */
    public function setOwner($var)
    {
        GPBUtil::checkString($var, True);
        $this->owner = $var;
    }

    /**
     * <pre>
     * 房间状态（）
     * </pre>
     *
     * <code>uint32 room_status = 4;</code>
     */
    public function getRoomStatus()
    {
        return $this->room_status;
    }

    /**
     * <pre>
     * 房间状态（）
     * </pre>
     *
     * <code>uint32 room_status = 4;</code>
     */
    public function setRoomStatus($var)
    {
        GPBUtil::checkUint32($var);
        $this->room_status = $var;
    }

    /**
     * <pre>
     * 当前局数
     * </pre>
     *
     * <code>uint32 current_round = 5;</code>
     */
    public function getCurrentRound()
    {
        return $this->current_round;
    }

    /**
     * <pre>
     * 当前局数
     * </pre>
     *
     * <code>uint32 current_round = 5;</code>
     */
    public function setCurrentRound($var)
    {
        GPBUtil::checkUint32($var);
        $this->current_round = $var;
    }

    /**
     * <pre>
     * 地主uuid
     * </pre>
     *
     * <code>string laird_player = 6;</code>
     */
    public function getLairdPlayer()
    {
        return $this->laird_player;
    }

    /**
     * <pre>
     * 地主uuid
     * </pre>
     *
     * <code>string laird_player = 6;</code>
     */
    public function setLairdPlayer($var)
    {
        GPBUtil::checkString($var, True);
        $this->laird_player = $var;
    }

    /**
     * <pre>
     * 当前出牌玩家的uuid
     * </pre>
     *
     * <code>string discard_player = 7;</code>
     */
    public function getDiscardPlayer()
    {
        return $this->discard_player;
    }

    /**
     * <pre>
     * 当前出牌玩家的uuid
     * </pre>
     *
     * <code>string discard_player = 7;</code>
     */
    public function setDiscardPlayer($var)
    {
        GPBUtil::checkString($var, True);
        $this->discard_player = $var;
    }

    /**
     * <pre>
     * 当前抢地主玩家的uuid
     * </pre>
     *
     * <code>string rob_player = 8;</code>
     */
    public function getRobPlayer()
    {
        return $this->rob_player;
    }

    /**
     * <pre>
     * 当前抢地主玩家的uuid
     * </pre>
     *
     * <code>string rob_player = 8;</code>
     */
    public function setRobPlayer($var)
    {
        GPBUtil::checkString($var, True);
        $this->rob_player = $var;
    }

    /**
     * <pre>
     * 底分
     * </pre>
     *
     * <code>int32 base_score = 9;</code>
     */
    public function getBaseScore()
    {
        return $this->base_score;
    }

    /**
     * <pre>
     * 底分
     * </pre>
     *
     * <code>int32 base_score = 9;</code>
     */
    public function setBaseScore($var)
    {
        GPBUtil::checkInt32($var);
        $this->base_score = $var;
    }

    /**
     * <pre>
     * 总分
     * </pre>
     *
     * <code>int32 score = 10;</code>
     */
    public function getScore()
    {
        return $this->score;
    }

    /**
     * <pre>
     * 总分
     * </pre>
     *
     * <code>int32 score = 10;</code>
     */
    public function setScore($var)
    {
        GPBUtil::checkInt32($var);
        $this->score = $var;
    }

    /**
     * <pre>
     * 翻倍数
     * </pre>
     *
     * <code>int32 multiple = 11;</code>
     */
    public function getMultiple()
    {
        return $this->multiple;
    }

    /**
     * <pre>
     * 翻倍数
     * </pre>
     *
     * <code>int32 multiple = 11;</code>
     */
    public function setMultiple($var)
    {
        GPBUtil::checkInt32($var);
        $this->multiple = $var;
    }

    /**
     * <pre>
     * 三张底牌
     * </pre>
     *
     * <code>repeated .game.Card three_cards = 12;</code>
     */
    public function getThreeCards()
    {
        return $this->three_cards;
    }

    /**
     * <pre>
     * 三张底牌
     * </pre>
     *
     * <code>repeated .game.Card three_cards = 12;</code>
     */
    public function setThreeCards(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Game\Card::class);
        $this->three_cards = $arr;
    }

    /**
     * <pre>
     * 本局中炸弹次数
     * </pre>
     *
     * <code>int32 boom_cnt = 13;</code>
     */
    public function getBoomCnt()
    {
        return $this->boom_cnt;
    }

    /**
     * <pre>
     * 本局中炸弹次数
     * </pre>
     *
     * <code>int32 boom_cnt = 13;</code>
     */
    public function setBoomCnt($var)
    {
        GPBUtil::checkInt32($var);
        $this->boom_cnt = $var;
    }

    /**
     * <code>repeated .game.ReconnectResponse.Player player = 14;</code>
     */
    public function getPlayer()
    {
        return $this->player;
    }

    /**
     * <code>repeated .game.ReconnectResponse.Player player = 14;</code>
     */
    public function setPlayer(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Game\ReconnectResponse_Player::class);
        $this->player = $arr;
    }

    /**
     * <code>uint32 code = 15;</code>
     */
    public function getCode()
    {
        return $this->code;
    }

    /**
     * <code>uint32 code = 15;</code>
     */
    public function setCode($var)
    {
        GPBUtil::checkUint32($var);
        $this->code = $var;
    }

    /**
     * <pre>
     * 上个出牌玩家的UUID
     * </pre>
     *
     * <code>string prev_discard_player = 16;</code>
     */
    public function getPrevDiscardPlayer()
    {
        return $this->prev_discard_player;
    }

    /**
     * <pre>
     * 上个出牌玩家的UUID
     * </pre>
     *
     * <code>string prev_discard_player = 16;</code>
     */
    public function setPrevDiscardPlayer($var)
    {
        GPBUtil::checkString($var, True);
        $this->prev_discard_player = $var;
    }

    /**
     * <pre>
     * 上个玩家出的牌
     * </pre>
     *
     * <code>repeated .game.Card prev_discard_cards = 17;</code>
     */
    public function getPrevDiscardCards()
    {
        return $this->prev_discard_cards;
    }

    /**
     * <pre>
     * 上个玩家出的牌
     * </pre>
     *
     * <code>repeated .game.Card prev_discard_cards = 17;</code>
     */
    public function setPrevDiscardCards(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Game\Card::class);
        $this->prev_discard_cards = $arr;
    }

    /**
     * <pre>
     *亮主A的玩家
     * </pre>
     *
     * <code>string show_a_player = 19;</code>
     */
    public function getShowAPlayer()
    {
        return $this->show_a_player;
    }

    /**
     * <pre>
     *亮主A的玩家
     * </pre>
     *
     * <code>string show_a_player = 19;</code>
     */
    public function setShowAPlayer($var)
    {
        GPBUtil::checkString($var, True);
        $this->show_a_player = $var;
    }

    /**
     * <pre>
     *亮次A的玩家
     * </pre>
     *
     * <code>string show_a_ex_player = 20;</code>
     */
    public function getShowAExPlayer()
    {
        return $this->show_a_ex_player;
    }

    /**
     * <pre>
     *亮次A的玩家
     * </pre>
     *
     * <code>string show_a_ex_player = 20;</code>
     */
    public function setShowAExPlayer($var)
    {
        GPBUtil::checkString($var, True);
        $this->show_a_ex_player = $var;
    }

    /**
     * <pre>
     *亮的A牌
     * </pre>
     *
     * <code>int32 show_a_card = 21;</code>
     */
    public function getShowACard()
    {
        return $this->show_a_card;
    }

    /**
     * <pre>
     *亮的A牌
     * </pre>
     *
     * <code>int32 show_a_card = 21;</code>
     */
    public function setShowACard($var)
    {
        GPBUtil::checkInt32($var);
        $this->show_a_card = $var;
    }

    /**
     * <pre>
     *大A玩家是否全部出现
     * </pre>
     *
     * <code>int32 is_all_show_a = 22;</code>
     */
    public function getIsAllShowA()
    {
        return $this->is_all_show_a;
    }

    /**
     * <pre>
     *大A玩家是否全部出现
     * </pre>
     *
     * <code>int32 is_all_show_a = 22;</code>
     */
    public function setIsAllShowA($var)
    {
        GPBUtil::checkInt32($var);
        $this->is_all_show_a = $var;
    }

    /**
     * <pre>
     *0 亮一个A  1 亮双A  2 反A
     * </pre>
     *
     * <code>int32 tableType = 23;</code>
     */
    public function getTableType()
    {
        return $this->tableType;
    }

    /**
     * <pre>
     *0 亮一个A  1 亮双A  2 反A
     * </pre>
     *
     * <code>int32 tableType = 23;</code>
     */
    public function setTableType($var)
    {
        GPBUtil::checkInt32($var);
        $this->tableType = $var;
    }

    /**
     * <pre>
     *0 非独8  1 独8
     * </pre>
     *
     * <code>int32 singleFlag = 24;</code>
     */
    public function getSingleFlag()
    {
        return $this->singleFlag;
    }

    /**
     * <pre>
     *0 非独8  1 独8
     * </pre>
     *
     * <code>int32 singleFlag = 24;</code>
     */
    public function setSingleFlag($var)
    {
        GPBUtil::checkInt32($var);
        $this->singleFlag = $var;
    }

    /**
     * <pre>
     * 另一个A所属于的玩家
     * </pre>
     *
     * <code>string otherAPlayer = 25;</code>
     */
    public function getOtherAPlayer()
    {
        return $this->otherAPlayer;
    }

    /**
     * <pre>
     * 另一个A所属于的玩家
     * </pre>
     *
     * <code>string otherAPlayer = 25;</code>
     */
    public function setOtherAPlayer($var)
    {
        GPBUtil::checkString($var, True);
        $this->otherAPlayer = $var;
    }

}

